#!/bin/bash
#-*- coding: utf-8 -*-
# code2pl-merger of common and ssi
USER=`whoami`
DATE=`date`
DEBUG=1
echo "# arguments called with ---->  ${@}     "
echo "# path to me --------------->  ${0}     "
echo "# \$1 ----------------------->  $1       "
echo "# \$2 ----------------------->  $2       "
echo "# PID ---------------------->  $$       "
echo "# source------------------->  $ACTIVEFILE"

BASENAME=${1##*/}
BASENAME=${BASENAME%.table} # SSI (exclusive)
ROOTNAME=${BASENAME%_20*} # SSI (exclusive)
TABLENAME=${BASENAME##*.}
TEST=${BASENAME%.table} # SSI (personlized) [.table]
  


ACTIVEFOLDER=${ACTIVEFOLDER:-};

SCRIPTFILE=${SCRIPTFILE:-$0};
SCRIPTPATH=${SCRIPTFILE%/*}
SCRIPTNAME=${SCRIPTFILE##*/}

ACTIVEFILE=${ACTIVEFILE:-$1};
if [ "$ACTIVEFOLDER" == "" ]; then
  ACTIVEFOLDER="${ACTIVEFILE%/*}"
fi
ACTIVEFILENAME=$(basename "$ACTIVEFILE")
ACTIVEFILEEXTENTION="${ACTIVEFILENAME##*.}"
ACTIVEBASENAME="${ACTIVEFILENAME%.*}"


echo "# root---------------------->  $ROOTNAME"
echo "# base--------------------->  $BASENAME"
echo "# table-------------------->  $TABLENAME"

ACTIVEID=${ACTIVEID:-$2};
ACTIVEUSER=${ACTIVEID%:*}
ACTIVEGROUP=${ACTIVEID##*:}












function _msg {
    MSG=${1:-"No Message"}
    TYPE=${2:-}
    if [ ! -z "$TYPE" ]; then TYPE=" ($TYPE)"; fi
    OPT=${3:-}
    #echo "MSG: <$MSG>	 TYPE: <$TYPE> OPT: <$OPT>"
    TIME=`date -R`
    echo  $OPT " [$TIME] $HOSTNAME $SCRIPTNAME-$USER]:$TYPE $MSG"
}

function _Imsg {
   OPT=" ${2:-}"
  _msg "$1" "I"  "$OPT"
}

function _Dmsg {
   OPT=" ${2:-}"
  if [ $DEBUG -eq 1 ]; then
    _msg "$1" "D"  "$OPT"
  fi
}

function _Emsg {
   OPT=" ${2:-}"
  _msg "$1" "E"  "$OPT"
}

function _Wmsg {
   OPT=" ${2:-}"
  _msg "$1" "W"  "$OPT"
}

function _mkdir {
  DIR=${1:-}
  #_Dmsg "DIR: <$DIR>"
  if [ -z "$DIR" ]; then 
     _Emsg "_mkdir: fehlender Operand"
  else
  if [ -d "$DIR" ]; then 
    echo " (I) Setup - Directory $DIR already exists. Will reuse it."
  else
    echo -ne " (I) Setup - Creating $DIR as $ACTIVEUSER for future usage: "
    mkdir  -p $DIR
    if [ "$?" == "0" ]; then echo "DONE."; fi
  fi
  fi
}










CALL="${BASH_SOURCE[0]}"
DIR="$( dirname "$CALL" )"
while [ -h "$CALL" ]
do
  CALL="$(readlink "$CALL")"
  [[ $CALL != /* ]] && SOURCE="$DIR/$CALL"
  DIR="$( cd -P "$( dirname "$CALL"  )" && pwd )"
done
_Dmsg "Script Name: $SCRIPTNAME"
_Dmsg "Script Dir: $DIR"
_Dmsg "Script Call: $CALL"




PID=$$
DATE=`date +%Y%j`
TIME=`date +%H%M%S`
LOGFOLDER=${LOGFOLDER:-.};
LOGFOLDER="$LOGFOLDER/$SCRIPTNAME/$DATE"
LOGFILE="$LOGFOLDER/$TIME.log"
_mkdir $LOGFOLDER


if [ -e $SCRIPTPATH/perl/$SCRIPTNAME.version ]; then
  VERSION=`cat $SCRIPTPATH/perl/$SCRIPTNAME.version`
fi

echo "$SCRIPTNAME script located in $SCRIPTPATH version $VERSION executed by $USER on $DATE from directory $ACTIVEFOLDER  with $PID"
echo "# source------------------->  $ACTIVEFILE"
echo "# base--------------------->  $ACTIVEBASENAME"
echo "# root--------------------->  $ROOTNAME"
echo "# table-------------------->  $TABLENAME"
echo "# ID---------------------->  $ACTIVEID"
echo "# RWD---------------------->  $ACTIVEFOLDER"
echo "# CWD---------------------->  $SCRIPTPATH"
echo "# Log---------------------->  $LOGFILE"
RESULTFILES="$ACTIVEFOLDER/_promote.list $ACTIVEFOLDER/_upload.list $ACTIVEFOLDER/${ROOTNAME}_preview.html" # SSI (personlized) [$ACTIVEFOLDER/_promote.list $ACTIVEFOLDER/_upload.list $ACTIVEFOLDER/${ROOTNAME}_preview.html]



PERLSCRIPT="$SCRIPTPATH/perl/$SCRIPTNAME$VERSION.pl"

if [ -d "$ACTIVEFOLDER/${ROOTNAME}_" ]; then # SSI (exclusive)
  echo "cp $ACTIVEFOLDER/$BASENAME.table $ACTIVEFOLDER/${ROOTNAME}_/${ROOTNAME}_preview.$TABLENAME.table" # SSI (exclusive)
  cp "$ACTIVEFOLDER/$BASENAME.table" "$ACTIVEFOLDER/${ROOTNAME}_/${ROOTNAME}_preview.$TABLENAME.table" # SSI (exclusive)
  REMOTEDIR="" # SSI (exclusive)
  if [ -r $ACTIVEFOLDER/${ROOTNAME}_/.remoteDir ]; then # SSI (exclusive)
    REMOTEDIR=`cat $ACTIVEFOLDER/${ROOTNAME}_/.remoteDir` # SSI (exclusive)
  fi # SSI (exclusive)
  echo "REMOTEDIR = $REMOTEDIR" # SSI (exclusive)
  echo "put,$ACTIVEFOLDER/${ROOTNAME}_/${ROOTNAME}_preview.$TABLENAME.table,${REMOTEDIR}${ROOTNAME}_preview.$TABLENAME.table" >> ${ACTIVEFOLDER}/_upload.list # SSI (exclusive)
  echo "promote,${REMOTEDIR}${ROOTNAME}_preview.$TABLENAME.table" >> ${ACTIVEFOLDER}/_promote.list # SSI (exclusive)
  echo "chgrp $ACTIVEGROUP $ACTIVEFOLDER/${ROOTNAME}_/${ROOTNAME}_preview.$TABLENAME.table ${ACTIVEFOLDER}/_upload.list ${ACTIVEFOLDER}/_promote.list" # SSI (exclusive)
  chgrp $ACTIVEGROUP "$ACTIVEFOLDER/${ROOTNAME}_/${ROOTNAME}_preview.$TABLENAME.table" # SSI (exclusive)


mv $ACTIVEFILE $LOGFOLDER/$TIME-$ACTIVEFILENAME


  echo "cd $ACTIVEFOLDER/${ROOTNAME}_" # SSI (exclusive)
  cd "$ACTIVEFOLDER/${ROOTNAME}_" # SSI (exclusive)
  echo "$PERLSCRIPT ${ROOTNAME}_preview.html > $ACTIVEFOLDER/${ROOTNAME}_preview.html 2>> $LOGFILE" # SSI (exclusive)
$PERLSCRIPT ${ROOTNAME}_preview.html > $ACTIVEFOLDER/${ROOTNAME}_preview.html 2> $LOGFILE # SSI (exclusive)
#  chgrp pagemaster "$ACTIVEFOLDER/${ROOTNAME}_preview.html" # SSI (exclusive)
#  chmod 664 "$ACTIVEFOLDER/${ROOTNAME}_preview.html" # SSI (exclusive)
else # SSI (exclusive)
  echo "(E) Directory named $ACTIVEFOLDER/${ROOTNAME}_ not found. ABORT." # SSI (exclusive)
fi # SSI (exclusive)

for RESULTFILE in $RESULTFILES ; do
echo "(I) Modify Ownership $RESULTFILE"
  chgrp $ACTIVEGROUP "$RESULTFILE"
  chmod 664 "$RESULTFILE"
ls -la $RESULTFILE
done
cd $ACTIVEFOLDER
echo "(I) $SCRIPTNAME completed."
